name: CI tests

on:
  pull_request:
  push:
    branches:
    - main
    - 'push-action/**'

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Set up Python 3.9
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools
        pip install flake8

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --statistics

  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools
        pip install -e .[dev]

    - name: Run pre-commit
      run: |
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  pytest:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.9

    - name: Install latest compatible versions of immediate dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools
        pip install -e .[testing]

    - name: Run all tests
      run: pytest -rs -vvv --cov=./optimage/ --cov-report=xml tests/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.0.2
      with:
        name: project
        file: ./coverage.xml
        flags: project

  validate:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2.3.4

    - name: Build Docker image
      run: docker-compose build

    - name: Start Docker image
      run: |
        docker-compose up necroptimade &
        .github/workflows/wait_for_it.sh localhost:3214 -t 120
        sleep 15

    - name: Test index server, including OPTIONAL base URLs
      uses: Materials-Consortia/optimade-validator-action@v2.5.0
      with:
        port: 3214
        path: /
        all versioned paths: yes
        index: yes
        validator version: latest

    - name: Trigger default spawn event
      run: |
        curl http://localhost:3214/extensions/spawn

    - name: Validate spawned implementation
      uses: Materials-Consortia/optimade-validator-action@v2.5.0
      with:
        port: 3214
        path: '/127.0.0.1:8000/static/test_structures.json'
        all versioned paths: yes
        index: no
        validator version: latest

    - name: Trigger local file spawn event
      run: |
        curl http://localhost:3214/extensions/spawn?loc=./necroptimade/static/test_structures.json

    - name: Validate spawned implementation
      uses: Materials-Consortia/optimade-validator-action@v2.5.0
      with:
        port: 3214
        path: '/app/necroptimade/static/test_structures.json'
        all versioned paths: yes
        index: no
        validator version: latest
